<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="https://adamatti.github.io/blog/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://adamatti.github.io/blog/blog/" rel="alternate" type="text/html" /><updated>2017-07-18T01:17:36+00:00</updated><id>https://adamatti.github.io/blog/blog/</id><title type="html">Adamatti - blog pessoal</title><subtitle>Espaço para compartilhar conhecimento, minhas opiniões, notícias que eu considero relevante.
</subtitle><entry><title type="html">Teorema CAP</title><link href="https://adamatti.github.io/blog/blog/database/2017/07/16/teorema-cap.html" rel="alternate" type="text/html" title="Teorema CAP" /><published>2017-07-16T16:00:00+00:00</published><updated>2017-07-16T16:00:00+00:00</updated><id>https://adamatti.github.io/blog/blog/database/2017/07/16/teorema-cap</id><content type="html" xml:base="https://adamatti.github.io/blog/blog/database/2017/07/16/teorema-cap.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Você já ouviu falar sobre o teorema CAP?&lt;/p&gt;
&lt;/div&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/GBZ-bGDhGpg&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Não&amp;#8230;&amp;#8203; não esse CAP. Vamos a &lt;a href=&quot;https://pt.wikipedia.org/wiki/Teorema_CAP&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Teorema do CAP, também chamado de &lt;a href=&quot;http://www.cs.berkeley.edu/~brewer/cs262b-2004/PODC-keynote.pdf&quot;&gt;Teorema de Brewer&lt;/a&gt;, afirma que é impossível que o armazenamento de dados distribuído forneça simultaneamente mais de duas das três garantias seguintes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Consistência (Consistency)&lt;/strong&gt;: Cada leitura recebe a escrita mais recente ou um erro&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Disponibilidade (Availability&lt;/strong&gt;): Cada pedido recebe uma resposta (sem erro) - sem garantia de que contém a escrita mais recente&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tolerância a particionamentos (Partition tolerance)&lt;/strong&gt;: O sistema continua a funcionar apesar de um número arbitrário de mensagens serem descartadas (ou atrasadas) pela rede entre nós&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nenhum sistema distribuído está protegido contra falhas de rede, portanto, a &lt;strong&gt;partição&lt;/strong&gt; geralmente deve ser tolerada. Na presença de partições, são dadas duas opções: &lt;strong&gt;consistência&lt;/strong&gt; ou &lt;strong&gt;disponibilidade&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ao escolher &lt;strong&gt;consistência&lt;/strong&gt; em relação à disponibilidade, o sistema retornará um erro ou um tempo limite se informações específicas não puderem ser garantidamente actualizadas devido à sua partilha na rede.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ao escolher &lt;strong&gt;disponibilidade&lt;/strong&gt; sobre consistência, o sistema sempre processará a consulta e tentará retornar a versão disponível mais recente da informação, mesmo que não possa garantir que ela esteja atualizada devido às partições.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Versão super resumida&lt;/strong&gt;: bancos de dados só podem escolher 2 dos 3 elementos. É matemáticamente impossível ter os 3.&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;e-onde-os-bancos-de-dados-atuais-se-encaixam&quot;&gt;E onde os bancos de dados atuais se encaixam?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vamos à figura:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.mysoftkey.com/wp-content/uploads/2016/09/cap-theorem-triangle.png&quot; alt=&quot;cap theorem triangle&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Consistency&lt;/em&gt; + &lt;em&gt;Availability&lt;/em&gt;&lt;/strong&gt;: como exemplos temos bancos de dados relacionais (Oracle, MySql, Postgre, MS SQL Server, etc). Tendo CA, eles não tem &lt;em&gt;Partition Tolerance&lt;/em&gt;. Eles podem ter replicação, mas não partição. E aqui temos toda a parte de transação, &lt;em&gt;locks&lt;/em&gt; de banco, etc&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O banco de dados grafo &lt;a href=&quot;https://neo4j.com&quot;&gt;neo4j&lt;/a&gt; também está nesse quadrante, assim como o &lt;a href=&quot;https://www.torodb.com&quot;&gt;ToroDB&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Consistency&lt;/em&gt; + &lt;em&gt;Partition Tolerance&lt;/em&gt;&lt;/strong&gt;: a maioria dos bancos noSql estão aqui. Eles podem ser chave-valor (&lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt;), tabulares (&lt;a href=&quot;https://hbase.apache.org&quot;&gt;hbase&lt;/a&gt; do &lt;a href=&quot;http://hadoop.apache.org/&quot;&gt;Hadoop&lt;/a&gt;) e orientados a documento (&lt;a href=&quot;https://www.mongodb.com/&quot;&gt;mongo&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mesmo sacrificando disponibilidade isso não deveria ser um problema se usado corretamente. Ex: fazer a aplicação conhecer todos os membros &lt;em&gt;cluster&lt;/em&gt;, mudar o nodo em caso do atual falhar (e remover ele da lista de nodos válidos).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Partition Tolerance&lt;/em&gt; + &lt;em&gt;Availability&lt;/em&gt;&lt;/strong&gt;: aqui o mais conhecido é o &lt;a href=&quot;http://cassandra.apache.org/&quot;&gt;Cassandra&lt;/a&gt;, usado pelo netflix. Não tenho experiencia com bancos PA, mas do que eu pude ver você pode selecionar a consistência durante a operação. Ex: views do youtube - não teria muito problema se retornasse 1004 ou 1007 &lt;em&gt;views&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;considerações&quot;&gt;Considerações&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RDBMS não fazem uso de computação distribuída, limitando a escalabilidade por &lt;em&gt;hardware&lt;/em&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As vantagens dos bancos noSql vão alem da sintaxe, já que eles fazem uso de partição / cluster;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bancos como &lt;a href=&quot;https://www.mongodb.com/&quot;&gt;mongodb&lt;/a&gt; não fazem uso de transação (&lt;em&gt;commit&lt;/em&gt; / &lt;em&gt;rollback&lt;/em&gt;). E nem possuem isso no &lt;em&gt;roadmap&lt;/em&gt;. Para melhor uso desses bancos, pode ser usado um &lt;em&gt;approach&lt;/em&gt; de &lt;a href=&quot;https://www.youtube.com/watch?v=ATWEXZkYgek&quot;&gt;&lt;em&gt;Event Sourcing&lt;/em&gt;&lt;/a&gt;, onde não tenha alteração / exclusão de dados. Além de &lt;em&gt;event sourcing&lt;/em&gt; ainda tem controles de consistência otimistas, tipo o que os &lt;a href=&quot;http://couchdb.apache.org/&quot;&gt;&lt;em&gt;Couch&lt;/em&gt;&lt;/a&gt;-&lt;em&gt;like&lt;/em&gt; utilizam.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Divisão de &lt;em&gt;hardware&lt;/em&gt; é algo a ser considerado para melhor performance. Ex: em bancos como &lt;a href=&quot;https://hbase.apache.org&quot;&gt;hbase&lt;/a&gt;, é melhor ter múltiplos HDs menores do que um grande SSD, para paralelismo de IO;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;O modelo de dados pode ser implementado em diferentes bases do CAP, como é o caso de bancos de dados tabulares: CA com &lt;a href=&quot;https://www.vertica.com/&quot;&gt;Vertica&lt;/a&gt;, CP com &lt;a href=&quot;https://hbase.apache.org&quot;&gt;HBase&lt;/a&gt;, PA com &lt;a href=&quot;http://cassandra.apache.org/&quot;&gt;Cassandra&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;referencias&quot;&gt;Referencias&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.caelum.com.br/nosql-do-teorema-cap-para-paccl/&quot;&gt;NoSQL – Do teorema CAP para P?(A|C):(C|L)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://unrealps.wordpress.com/2010/12/28/o-teorema-cap&quot;&gt;O teorema CAP&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jrobertoaraujo.com/2017/01/03/teorema-cap&quot;&gt;Teorema Cap&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pt.slideshare.net/Celio12/nosql-base-vs-acid-e-teorema-cap&quot;&gt;NoSQL, Base VS ACID e Teorema CAP&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.geati.ifc-camboriu.edu.br/wiki/index.php/Exemplo_explicativo_do_Teorema_CAP&quot;&gt;Exemplo explicativo do Teorema CAP&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;updates&quot;&gt;Updates&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Obrigado especial ao &lt;a href=&quot;https://twitter.com/PEdrArthur&quot;&gt;@PEdrArthur&lt;/a&gt; pelo &lt;em&gt;review&lt;/em&gt; e dicas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dúvidas? comentários? Sugestões? Ficou claro o conteúdo? Deixa um comentário aí abaixo.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="databse" /><summary type="html">Você já ouviu falar sobre o teorema CAP?</summary></entry><entry><title type="html">Groovy, Gradle, Spock</title><link href="https://adamatti.github.io/blog/blog/groovy/2017/07/09/groovy.html" rel="alternate" type="text/html" title="Groovy, Gradle, Spock" /><published>2017-07-09T16:00:00+00:00</published><updated>2017-07-09T16:00:00+00:00</updated><id>https://adamatti.github.io/blog/blog/groovy/2017/07/09/groovy</id><content type="html" xml:base="https://adamatti.github.io/blog/blog/groovy/2017/07/09/groovy.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Eu já uso a linguagem &lt;a href=&quot;http://groovy-lang.org/&quot;&gt;Groovy&lt;/a&gt; a alguns anos, em diferentes empresas e diferentes projetos em produção. Vários arquitetos do meu circulo de amizade também usam groovy em produção.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A idéia desse &lt;em&gt;post&lt;/em&gt; é mostrar algumas referencias, pontos fortes, vantagens, e convencer mais pessoas a terem os benefícios dessa ferramenta.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Versão super resumida&lt;/strong&gt;: &lt;a href=&quot;http://groovy-lang.org/&quot;&gt;Groovy&lt;/a&gt; é uma &lt;em&gt;lib&lt;/em&gt; que você inclui em projetos java e com isso possibilita escrever código menos verboso (ex: sem &quot;;&quot;, &lt;code&gt;return&lt;/code&gt;, DTOs menores, etc), possibilita programação funcional (ver &lt;a href=&quot;http://groovy-lang.org/closures.html&quot;&gt;closures&lt;/a&gt;) e extende as classes java existente (ver &lt;a href=&quot;http://groovy-lang.org/closures.html&quot;&gt;closures&lt;/a&gt; para lista / mapa / URL, &lt;em&gt;parser&lt;/em&gt; de &lt;a href=&quot;http://groovy-lang.org/processing-xml.html&quot;&gt;XML&lt;/a&gt; / &lt;a href=&quot;http://groovy-lang.org/json.html&quot;&gt;Json&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Se você já sabe java já sabe 70% de &lt;em&gt;groovy&lt;/em&gt;. E &lt;em&gt;groovy&lt;/em&gt; é uma daquelas coisas que quando você começa a usar é difícil voltar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;No &lt;a href=&quot;https://zeroturnaround.com/rebellabs/java-tools-and-technologies-landscape-2016/&quot;&gt;report feito pela rebellabs&lt;/a&gt; de 2016, &lt;em&gt;groovy&lt;/em&gt; é mais usado que scala!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;https://zeroturnaround.com/rebellabs/java-tools-and-technologies-landscape-2016/&quot;&gt;&lt;img src=&quot;https://zeroturnaround.com/wp-content/uploads/2016/07/TnT-2016-podium-jvm-languages-v1.jpg&quot; alt=&quot;TnT 2016 podium jvm languages v1&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;groovy-x-java&quot;&gt;Groovy x Java&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nessa parte, concordo muito com os pontos levantados por &lt;a href=&quot;http://www.slideshare.net/paulk_asert&quot;&gt;Paul King&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Java é muito verboso&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Complicado para usar programação funcional&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Demora para evoluir (ver &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history&quot;&gt;wikipedia&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java é muito complexo para algumas situações&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Groovy fornece mais flexibilidade, melhor concorrencia&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Olhe essa conversão de código java para código groovy:&lt;/p&gt;
&lt;/div&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/cKnLncITiHQvgI?startSlide=15&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/paulk_asert/groovy-tutorial&quot; title=&quot;Groovy Tutorial&quot; target=&quot;_blank&quot;&gt;Groovy Tutorial&lt;/a&gt; &lt;/strong&gt; de &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;//www.slideshare.net/paulk_asert&quot;&gt;Paul King&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Não tá convencido ainda? Olha esse código de manipulação de arquivo:&lt;/p&gt;
&lt;/div&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/cKnLncITiHQvgI?startSlide=72&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/paulk_asert/groovy-tutorial&quot; title=&quot;Groovy Tutorial&quot; target=&quot;_blank&quot;&gt;Groovy Tutorial&lt;/a&gt; &lt;/strong&gt; de &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;//www.slideshare.net/paulk_asert&quot;&gt;Paul King&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;e nos slides 80-82 ele mostra como fazer com xml.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sql? Olha os slides 90-92.&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;alguns-em-snippets-em-de-código&quot;&gt;Alguns &lt;em&gt;snippets&lt;/em&gt; de código&lt;/h3&gt;
&lt;table class=&quot;tableblock frame-all grid-all spread&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 50%;&quot;&gt;
&lt;col style=&quot;width: 50%;&quot;&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;strong&gt;Groovy&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/1_vo_java.groovy&quot;&gt;vo&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/1_vo.groovy&quot;&gt;vo&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/2_list_java.groovy&quot;&gt;list&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/2_list.groovy&quot;&gt;list&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/3_map_java.groovy&quot;&gt;map&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/3_map.groovy&quot;&gt;map&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/4_file_java.groovy&quot;&gt;file&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/4_file.groovy&quot;&gt;file&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/5_url.groovy&quot;&gt;url&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/6_metaclass.groovy&quot;&gt;metaclass&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/7_xml.groovy&quot;&gt;xml&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/blob/master/groovy/8_json.groovy&quot;&gt;json&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Todos os arquivos estão disponíveis no &lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/tree/master/groovy&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;PS: &lt;em&gt;post&lt;/em&gt; ia ficar muito extenso se eu incluisse todos os códigos aqui. Mas concordo que ficou ruim de ver. Dica: baixa o código do &lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/tree/master/groovy&quot;&gt;github&lt;/a&gt; e vê local&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;ecossistema-do-groovy&quot;&gt;Ecossistema do groovy?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Teve uma apresentação na &lt;a href=&quot;http://gr8conf.org/&quot;&gt;g8conf&lt;/a&gt; sobre o ecossistema do groovy:&lt;/p&gt;
&lt;/div&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/4lQw76hsoj6kM3?startSlide=3&quot;
    width=&quot;595&quot;
    height=&quot;485&quot;
    frameborder=&quot;0&quot;
    marginwidth=&quot;0&quot;
    marginheight=&quot;0&quot;
    scrolling=&quot;no&quot;
    style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt;
&lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt;
    &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/aalmiray/gr8conf-groovy-ecosystem&quot; title=&quot;Gr8conf - The Groovy Ecosystem Revisited&quot; target=&quot;_blank&quot;&gt;Gr8conf - The Groovy Ecosystem Revisited&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;//www.slideshare.net/aalmiray&quot;&gt;Andres Almiray&lt;/a&gt;&lt;/strong&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sim, tá um pouco desatualizada, mas dá para dar uma idéia.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Highlights&lt;/strong&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gradle.org&quot;&gt;Gradle&lt;/a&gt;: todas as facilidades do &lt;a href=&quot;https://maven.apache.org&quot;&gt;Maven&lt;/a&gt;, com a flexibilidade do &lt;a href=&quot;http://ant.apache.org&quot;&gt;Ant&lt;/a&gt;. E não precisa de XML. E pode fazer qualquer coisa que a linguagem java/groovy permitem&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://sdkman.io/index.html&quot;&gt;SDKMan&lt;/a&gt;: gerenciador de SDKs para Maven, Ant, Java, Groovy, Scala, Clojure, etc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://grails.org&quot;&gt;Grails&lt;/a&gt;: &lt;em&gt;akas groovy on rails&lt;/em&gt;. Super junção do Spring + Hibernate + Gradle + Groovy + boas práticas. Dá uma olhada no &lt;a href=&quot;https://docs.grails.org/latest/guide/GORM.html&quot;&gt;GORM&lt;/a&gt; e vê o poder disso&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://spockframework.org/&quot;&gt;Spock&lt;/a&gt;: Framework de testes. Tipo jUnit, mas com o poder do groovy + BDD e outras coisas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://gebish.org/&quot;&gt;Geb&lt;/a&gt;: extensão do Spock para testes de tela. Tipo &lt;a href=&quot;http://www.seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://sparkjava.com&quot;&gt;Spark Java&lt;/a&gt;: Framework tipo &lt;a href=&quot;http://www.sinatrarb.com/&quot;&gt;Sinatra&lt;/a&gt; para criar aplicações web / APIs. Muito mais leve que &lt;a href=&quot;https://projects.spring.io/spring-boot&quot;&gt;Spring boot&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.gpars.org&quot;&gt;GPars&lt;/a&gt;: Framework para concorrencia e paralelismo&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;e-quem-usa-em-groovy-em&quot;&gt;E quem usa &lt;em&gt;Groovy&lt;/em&gt;?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O &lt;a href=&quot;http://www.slideshare.net/paulk_asert&quot;&gt;Paul King&lt;/a&gt; mostra isso na apresentação dele:&lt;/p&gt;
&lt;/div&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/aWfH07QkojiZNt?startSlide=150&quot;
    width=&quot;595&quot;
    height=&quot;485&quot;
    frameborder=&quot;0&quot;
    marginwidth=&quot;0&quot;
    marginheight=&quot;0&quot;
    scrolling=&quot;no&quot;
    style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot;
    allowfullscreen&gt;
&lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt;
    &lt;strong&gt;
        &lt;a href=&quot;//www.slideshare.net/paulk_asert/awesome-groovy&quot; title=&quot;awesome groovy&quot; target=&quot;_blank&quot;&gt;awesome groovy&lt;/a&gt; &lt;/strong&gt; de &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;//www.slideshare.net/paulk_asert&quot;&gt;Paul King&lt;/a&gt;
    &lt;/strong&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;ok-quem-usa-groovy-no-brasil&quot;&gt;Ok&amp;#8230;&amp;#8203; quem usa groovy no Brasil?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O &lt;a href=&quot;http://www.slideshare.net/loboweissmann&quot;&gt;Henrique Weissmann&lt;/a&gt; mostra isso na apresentação dele:&lt;/p&gt;
&lt;/div&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/1HSWHBZogacq17?startSlide=11&quot;
    width=&quot;595&quot;
    height=&quot;485&quot;
    frameborder=&quot;0&quot;
    marginwidth=&quot;0&quot;
    marginheight=&quot;0&quot;
    scrolling=&quot;no&quot;
    style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt;
&lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt;
    &lt;strong&gt;
        &lt;a href=&quot;//www.slideshare.net/loboweissmann/slides-final-41029521&quot; title=&quot;Alta produtividade em Java EE com Groovy e Grails&quot; target=&quot;_blank&quot;&gt;Alta produtividade em Java EE com Groovy e Grails&lt;/a&gt;&lt;/strong&gt; de &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;//www.slideshare.net/loboweissmann&quot;&gt;Henrique Weissmann&lt;/a&gt;
    &lt;/strong&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Olhar projetos em &lt;em&gt;groovy&lt;/em&gt;. Tenho vários no &lt;a href=&quot;https://github.com/adamatti?utf8=%E2%9C%93&amp;amp;tab=repositories&amp;amp;q=&amp;amp;type=&amp;amp;language=groovy&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aprender &lt;a href=&quot;https://gradle.org&quot;&gt;Gradle&lt;/a&gt;. Tem alguns exemplos &lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/tree/master/gradle&quot;&gt;no meu github&lt;/a&gt;. E tem a &lt;a href=&quot;https://www.eventials.com/Globalcode/gradle-o-melhor-amigo-no-build-do-seu-software/&quot;&gt;apresentação do Felipe Mamud&lt;/a&gt; no TDC Florianópolis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aprender &lt;a href=&quot;https://grails.org&quot;&gt;Grails&lt;/a&gt;. Mais exemplos no &lt;a href=&quot;https://github.com/adamatti/RSJUG_03_Ago_16/tree/master/grails&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aprender &lt;a href=&quot;http://spockframework.org/&quot;&gt;Spock&lt;/a&gt; (para testes). Projeto completo &lt;a href=&quot;https://github.com/adamatti/LearnSpock&quot;&gt;aqui&lt;/a&gt;. E esse &lt;a href=&quot;https://rskupnik.github.io/tdd-with-spock-groovy-and-java&quot;&gt;artigo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;referencias&quot;&gt;Referencias:&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/adamatti/awesome/blob/master/groovy.adoc&quot;&gt;Awesome List&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://groovy-lang.org/ecosystem.html&quot;&gt;Ecosystem&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Curtiu o &lt;em&gt;post&lt;/em&gt;? Não curtiu? Achou mais ou menos? Dúvidas / perguntas / sugestões? Deixa um comentário aí.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="groovy" /><category term="gradle" /><category term="spock" /><summary type="html">Eu já uso a linguagem Groovy a alguns anos, em diferentes empresas e diferentes projetos em produção. Vários arquitetos do meu circulo de amizade também usam groovy em produção.</summary></entry><entry><title type="html">Algumas notas sobre docker</title><link href="https://adamatti.github.io/blog/blog/docker/2017/07/03/docker.html" rel="alternate" type="text/html" title="Algumas notas sobre docker" /><published>2017-07-03T16:00:00+00:00</published><updated>2017-07-03T16:00:00+00:00</updated><id>https://adamatti.github.io/blog/blog/docker/2017/07/03/docker</id><content type="html" xml:base="https://adamatti.github.io/blog/blog/docker/2017/07/03/docker.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ok, não consegui manter o ritmo de uma semana (&lt;a href=&quot;/blog/ruby/2017/05/19/newBlog.html&quot;&gt;meta inicial&lt;/a&gt;). Mas voltando&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;docker&quot;&gt;Docker&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A algum tempo venho planejando falar algo sobre esse cara (o docker), mas ao mesmo tempo vejo que já tem &lt;em&gt;zilhões&lt;/em&gt; de vídeos/artigos falando sobre docker. E ainda tem pessoas q tem dúvidas sobre ele, então acho que ainda tem margem para falar mais um pouco :-)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;não-sei-nada-de-docker-por-onde-começo&quot;&gt;Não sei nada de docker, por onde começo?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Um dos vídeos mais ditáticos é o do &lt;a href=&quot;https://www.youtube.com/user/linuxtipscanal&quot;&gt;Linux tips&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/0cDj7citEjE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&amp;#8230;&amp;#8203;e tem também o vídeo do &lt;a href=&quot;https://twitter.com/gomex&quot;&gt;Gomex&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/0-AK020S1ak&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O &lt;a href=&quot;https://twitter.com/gomex&quot;&gt;Gomex&lt;/a&gt; também escreveu um livro sobre Docker [
&lt;a href=&quot;https://github.com/gomex/docker-para-desenvolvedores&quot;&gt;github&lt;/a&gt; |
&lt;a href=&quot;https://leanpub.com/dockerparadesenvolvedores&quot;&gt;leanpub&lt;/a&gt;
]&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;ok-e-o-que-mais&quot;&gt;Ok, e o que mais?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Bom, aqui eu tento transmitir os conhecimentos de um grande professor / arquiteto, &lt;a href=&quot;https://medium.com/@diogo.lucas&quot;&gt;Diogo Lucas&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;1) O container docker é &lt;strong&gt;imutável&lt;/strong&gt;. Toda vez que você parar ele e rodar denovo, ele terá o mesmo estado da primeira execução. Ele não guarda estado. Você pode ter &lt;em&gt;volumes&lt;/em&gt; mapeados para guardar dados (ex: banco de dados), mas logs ou outros dados não devem ser salvos dentro de um container. Levantar container e fazer uma configuração tbm não é uma boa prática (ex: rodar jboss com config especial feita em &lt;em&gt;runtime&lt;/em&gt;).
Configs devem ficar fora do container também&amp;#8230;&amp;#8203; talvez variáveis de ambiente? (ver &lt;a href=&quot;https://12factor.net/config&quot;&gt;12 factors - config&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Outro ditado sobre o docker que chama a atenção a primeira vista: containers docker devem ser tratados como gado, e não como animais de estimação. Você não dá nome para gado. E não deve ter medo de matar um container e recriar. Se você dá nome para as instancias de containers (instancias, não imagens), tem algo errado aí&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;2) Uma imagem docker usa &lt;strong&gt;camadas&lt;/strong&gt; (&lt;em&gt;layers&lt;/em&gt;). Logo, ao criar uma imagem tem que ser pensado o que será reusado. Logo, incluir dependencias antes do código.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Um exemplo:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;tok-l tok-l-Scalar tok-l-Scalar-Plain&quot;&gt;FROM node:latest&lt;/span&gt;

&lt;span class=&quot;tok-l tok-l-Scalar tok-l-Scalar-Plain&quot;&gt;RUN mkdir /app&lt;/span&gt;
&lt;span class=&quot;tok-l tok-l-Scalar tok-l-Scalar-Plain&quot;&gt;WORKDIR /app&lt;/span&gt;

&lt;span class=&quot;tok-l tok-l-Scalar tok-l-Scalar-Plain&quot;&gt;# Adiciona descritor de dependencias na imagem&lt;/span&gt;
&lt;span class=&quot;tok-l tok-l-Scalar tok-l-Scalar-Plain&quot;&gt;ADD package.json /app&lt;/span&gt;

&lt;span class=&quot;tok-l tok-l-Scalar tok-l-Scalar-Plain&quot;&gt;#baixa as dependencias na imagem&lt;/span&gt;
&lt;span class=&quot;tok-l tok-l-Scalar tok-l-Scalar-Plain&quot;&gt;RUN npm install&lt;/span&gt;

&lt;span class=&quot;tok-l tok-l-Scalar tok-l-Scalar-Plain&quot;&gt;#Adiciona o resto do código&lt;/span&gt;
&lt;span class=&quot;tok-l tok-l-Scalar tok-l-Scalar-Plain&quot;&gt;ADD . /app&lt;/span&gt;

&lt;span class=&quot;tok-l tok-l-Scalar tok-l-Scalar-Plain&quot;&gt;EXPOSE 80&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Supondo um desenvolvimento &quot;normal&quot; nesse projeto node, mudanças de código serão rápidas pois o docker fará &lt;em&gt;cache&lt;/em&gt; da imagem node e das dependencias (descritas no &lt;em&gt;package.json&lt;/em&gt;). A imagem só vai baixar as dependencias novamente se o &lt;em&gt;package.json&lt;/em&gt; for alterado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;3) Containers são &lt;strong&gt;leves&lt;/strong&gt;. Ok, esse imagem deve estar &lt;em&gt;batida&lt;/em&gt;, mas vamos denovo:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://zdnet2.cbsistatic.com/hub/i/r/2017/05/08/af178c5a-64dd-4900-8447-3abd739757e3/resize/770xauto/78abd09a8d41c182a28118ac0465c914/docker-vm-container.png&quot; alt=&quot;docker vm container&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Não são as &lt;em&gt;libs&lt;/em&gt; do &lt;em&gt;OS&lt;/em&gt; são reusadas, mas as imagens base também: instancias diferentes de containers que usam as mesmas imagens base / &lt;em&gt;layers&lt;/em&gt; no mesmo server compartilham essa memória. Dois containers em execução não são duas vezes o uso da memória.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;4) Containes são &lt;strong&gt;reproduzíveis&lt;/strong&gt;. Sim, aquela história de &quot;funciona na minha máquina&quot; acabou. Não importa se o &lt;em&gt;host&lt;/em&gt; é &lt;em&gt;windows/linux/osx&lt;/em&gt;, a execução do container deve ser igual.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Imagine o cenário: você tem uma aplicação node / java que acessa banco mongo, um cache redis, filas usando rabbitmq&amp;#8230;&amp;#8203; tudo isso pode ser simulado usando &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;docker-compose&lt;/a&gt;, e se o CI for bem feito ele vai chamar só uma linha de execução (algo como &lt;code&gt;docker-compose run app meuComandoDeTeste&lt;/code&gt;). Só configurar para rodar a cada &lt;em&gt;commit&lt;/em&gt;, e em caso de erro é só reproduzir na máquina de &lt;em&gt;dev&lt;/em&gt; local.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;minha-experiência&quot;&gt;Minha experiência&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Tinhamos dois modulos em um projeto, um em node usando mongo / redis / rabbitmq para API e persistência de dados, um módulo java usando &lt;a href=&quot;http://camel.apache.org&quot;&gt;Apache Camel&lt;/a&gt; para rotas e integrações (ex: ftp, tcp, rest, etc)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Pontos importantes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Usavamos &lt;a href=&quot;http://nvie.com/posts/a-successful-git-branching-model&quot;&gt;gitflow&lt;/a&gt; como modelo de &lt;em&gt;branch&lt;/em&gt;, com configuração no &lt;a href=&quot;https://br.atlassian.com/software/bamboo&quot;&gt;bamboo&lt;/a&gt; para efetuar CI a cada &lt;em&gt;commit&lt;/em&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Os testes era focado em &lt;em&gt;end to end&lt;/em&gt;, isto é, usando &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;docker-compose&lt;/a&gt; rodavamos a API &quot;live&quot; (conectando em instancias geradas das dependencias - mongo, redis, etc) e rodava os testes;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Builds&lt;/em&gt; simultaneos não geravam problema;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Testes não eram demorados. Devido ao &lt;em&gt;cache&lt;/em&gt; do docker, testes do módulo node demoravam 7 segundos&amp;#8230;&amp;#8203; e tinham vários testes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Como nosso &lt;strong&gt;environment&lt;/strong&gt; de prod era misto de &lt;em&gt;cloud&lt;/em&gt; e &lt;em&gt;on premise&lt;/em&gt; usando &lt;a href=&quot;/blog/git/2017/06/04/heroku.html&quot;&gt;heroku e dokku&lt;/a&gt;, nunca tivemos surpresas em prod já que nosso CI rodava exatamente o que era executado em prod&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Quer saber mais sobre o projeto? Eu falo um pouco sobre ele aqui:&lt;/p&gt;
&lt;/div&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/1wZGSSaDMDo&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&amp;#8230;&amp;#8203;e um pouco sobre a parte &lt;em&gt;event sourcing&lt;/em&gt; aqui:&lt;/p&gt;
&lt;/div&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ATWEXZkYgek&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;próximos-passos-relacionados&quot;&gt;Próximos Passos / relacionados&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=fscHSogDjes&quot;&gt;Palestra - O Docker, o Compose e a AWS no Google Campus&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jancarloviray.com/blog/paas-comparison-2017-dokku-flynn-deis-kubernetes-docker-swarm&quot;&gt;Comparação sobre PAAS: Dokku, Flynn, Deis, Kubernetes, Docker Swarm&lt;/a&gt; (2017)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://jaxenter.com/skills-machine-learning-big-data-cloud-computing-135037.html&quot;&gt;DevOps engineers think Docker, Ansible and Kubernetes are the top 3 tools to learn&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://diveintodocker.com/blog/the-3-biggest-wins-when-using-alpine-as-a-base-docker-image&quot;&gt;The 3 Biggest Wins When Using Alpine as a Base Docker Image&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;feedbacks&quot;&gt;Feedbacks&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Comentários? Feedbacks? Dicas? Dúvidas? Faltou algo? Algo ficou confuso? Coloca um comentário aí ou manda um email&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="docker" /><summary type="html">Ok, não consegui manter o ritmo de uma semana (meta inicial). Mas voltando&amp;#8230;&amp;#8203;</summary></entry><entry><title type="html">Node: iniciando</title><link href="https://adamatti.github.io/blog/blog/node/2017/06/14/why-node.html" rel="alternate" type="text/html" title="Node: iniciando" /><published>2017-06-14T16:00:00+00:00</published><updated>2017-06-14T16:00:00+00:00</updated><id>https://adamatti.github.io/blog/blog/node/2017/06/14/why-node</id><content type="html" xml:base="https://adamatti.github.io/blog/blog/node/2017/06/14/why-node.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Iniciar em node é bem simples. Tendo o pacode instalado (&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;installer aqui&lt;/a&gt;), ele já vem com o NPM (gerenciador de pacodes do node).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Um hello world seria:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;tok-c1&quot;&gt;//Não precisa de &amp;quot;;&amp;quot; no final&lt;/span&gt;
&lt;span class=&quot;tok-nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;tok-nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E para executar só precisa rodar:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;node nomeDoArquivoCriado.js&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;ok-e-como-estruturar-um-projeto&quot;&gt;Ok, e como estruturar um projeto?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Criando do zero, vc pode rodar &lt;code&gt;npm init&lt;/code&gt;, esse modo iterativo vai criar um arquivo &lt;code&gt;package.json&lt;/code&gt; onde ficam as definições de &lt;em&gt;scripts&lt;/em&gt; a serem executados, dependencias, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O &lt;code&gt;package.json&lt;/code&gt; é similar ao pom.xml (java), Gemfile (ruby), entre outros.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O arquivo gerado com &lt;code&gt;npm init&lt;/code&gt; é similar a:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;sample&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;1.0.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;index.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;tok-p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;ISC&amp;quot;&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Porém, só o conteudo abaixo é obrigatório:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;start&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;node index.js&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Agora para rodar é só chamar &lt;code&gt;npm start&lt;/code&gt; (o &lt;em&gt;npm&lt;/em&gt; vai procurar o &lt;em&gt;script&lt;/em&gt; &quot;start&quot; no &lt;code&gt;package.json&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;e-como-incluir-dependencias&quot;&gt;E como incluir dependencias?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Fácil. Exemplo: &lt;code&gt;npm install log4js --save&lt;/code&gt;. Nota: nas novas versões do &lt;em&gt;npm&lt;/em&gt; a &lt;em&gt;flag&lt;/em&gt; &lt;code&gt;--save&lt;/code&gt; não será necessária.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O &lt;code&gt;package.json&lt;/code&gt; vai ser atualizado com a dependencia:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;tok-p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;log4js&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;^1.1.1&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&amp;#8230;&amp;#8203;e para chamar no código fica:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;tok-kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;tok-nx&quot;&gt;log4js&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;tok-nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;log4js&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;tok-c1&quot;&gt;//a função &amp;quot;require&amp;quot; serve como import&lt;/span&gt;
	  &lt;span class=&quot;tok-nx&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;tok-nx&quot;&gt;log4js&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;tok-nx&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;tok-nx&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;tok-nx&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;Hello world&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;e-como-posso-iniciar-minha-api&quot;&gt;E como posso iniciar minha API?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dá uma olhada na &lt;a href=&quot;http://expressjs.com/pt-br/guide/routing.html&quot;&gt;documentação do express&lt;/a&gt;, está em português mesmo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Futuramente vale estudar o hapi ou o koa. Tem um &lt;a href=&quot;https://www.airpair.com/node.js/posts/nodejs-framework-comparison-express-koa-hapi&quot;&gt;comparativo aqui&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;que-ide-eu-posso-usar&quot;&gt;Que IDE eu posso usar?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recomendo o &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;. Possui &lt;em&gt;syntax highlight&lt;/em&gt;, &lt;em&gt;debug&lt;/em&gt; com &lt;em&gt;break points&lt;/em&gt;, é leve, tem plugins, é gratuíto, integrado com &lt;em&gt;git&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Se vc estiver disposto a pagar, tem o &lt;a href=&quot;https://www.jetbrains.com/webstorm&quot;&gt;WebStorm&lt;/a&gt; da JetBrains (mesma empresa do Intellij).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;pq-node-onde-usar-cases&quot;&gt;Pq node? Onde usar? Cases&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Bom, eu explico isso nesse vídeo:&lt;/p&gt;
&lt;/div&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/lqLacSh47PA&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;como-gerar-telas&quot;&gt;Como gerar telas?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hmm, esse assunto é muito amplo e varia dependendo da &lt;em&gt;lib&lt;/em&gt; selecionada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para quem curte a abordagem &lt;em&gt;rails&lt;/em&gt;, dá para dar uma estudada no &lt;a href=&quot;http://yeoman.io&quot;&gt;yeoman&lt;/a&gt;. Se for fazer algo manual, recomendo dar uma olhada no &lt;a href=&quot;http://www.embeddedjs.com/&quot;&gt;ejs&lt;/a&gt;. Tem um tutorial rápido de ejs + express &lt;a href=&quot;http://robdodson.me/how-to-use-ejs-in-express&quot;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;e-sobre-testes&quot;&gt;E sobre testes?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Tbm é um assunto amplo, pois temos vários tipos de teste (ex: &lt;em&gt;end to end&lt;/em&gt;, unitário, etc).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para testes de API dá para usar o &lt;a href=&quot;http://frisbyjs.com&quot;&gt;Frisby&lt;/a&gt;, testes unitários recomendo o &lt;a href=&quot;https://mochajs.org&quot;&gt;mocha&lt;/a&gt; ou &lt;a href=&quot;https://jasmine.github.io&quot;&gt;jasmine&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Particularmente eu curto mais testes &lt;em&gt;end to end&lt;/em&gt; com &lt;em&gt;docker-compose&lt;/em&gt; (assunto para um post futuro).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;a-href-http-coffeescript-org-coffeescript-a-a-href-https-www-typescriptlang-org-typescript-a-a-href-https-clojurescript-org-clojurescript-a&quot;&gt;&lt;a href=&quot;http://coffeescript.org&quot;&gt;CoffeeScript&lt;/a&gt;? &lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt;? &lt;a href=&quot;https://clojurescript.org&quot;&gt;ClojureScript&lt;/a&gt;?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O node / javascript é uma linguagem interpretada, isto é, ela não é compilada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Então, &lt;a href=&quot;http://coffeescript.org&quot;&gt;CoffeeScript&lt;/a&gt; / &lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt; / &lt;a href=&quot;https://clojurescript.org&quot;&gt;ClojureScript&lt;/a&gt; são &lt;a href=&quot;https://en.wikipedia.org/wiki/Source-to-source_compiler&quot;&gt;transpiladores&lt;/a&gt;: formas diferentes de escrever o javascript, para ser menos verboso, fazer checagem de tipo, etc. Mas no fim o código gerado ainda vai ser javascript.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Eu particularmente prefiro usar javascript direto, é mais fácil para &lt;em&gt;debugar&lt;/em&gt; / fazer &lt;em&gt;troubleshooting&lt;/em&gt; depois. Mas isso é opção de cada dev/time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ver o livro do grande &lt;a href=&quot;http://walde.co&quot;&gt;Waldemar Neto&lt;/a&gt;: &lt;a href=&quot;http://walde.co/2017/04/05/lancamento-livro-construindo-apis-testaveis-com-node-js/&quot;&gt;construindo apis testaveis com node.js&lt;/a&gt; [
&lt;a href=&quot;https://github.com/waldemarnt/building-testable-apis-with-nodejs&quot;&gt;github&lt;/a&gt; |
&lt;a href=&quot;https://leanpub.com/construindo-apis-testaveis-com-nodejs&quot;&gt;leanpub&lt;/a&gt; |
&lt;a href=&quot;https://www.youtube.com/watch?v=ELnbNjJQhUc&quot;&gt;youtube&lt;/a&gt;
]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Acompanhar algum meetup. Em Porto Alegre temos [
&lt;a href=&quot;https://www.meetup.com/pt-BR/Node-js-Porto-Alegre-Meetup&quot;&gt;meetup&lt;/a&gt; |
&lt;a href=&quot;https://github.com/node-poa/Meetups&quot;&gt;github&lt;/a&gt; |
&lt;a href=&quot;http://twitter.com/nodejspoa&quot;&gt;twitter&lt;/a&gt;
]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grupos no &lt;a href=&quot;http://slack.com&quot;&gt;slack&lt;/a&gt; [
&lt;a href=&quot;https://node-js.slack.com&quot;&gt;global&lt;/a&gt; |
&lt;a href=&quot;https://nodebr.slack.com&quot;&gt;nodeBR&lt;/a&gt;
]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Talvez &lt;a href=&quot;/blog/node/2017/05/20/hubot.html&quot;&gt;criar um chatbot&lt;/a&gt;? Fazer &lt;em&gt;deploy&lt;/em&gt; do projeto no &lt;a href=&quot;/blog/git/2017/06/04/heroku.html&quot;&gt;heroku&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;e-um-pouco-de-humor&quot;&gt;&amp;#8230;&amp;#8203; e um pouco de humor&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://codetalks.net/como-%C3%A9-programar-em-javascript-em-2016-9c9b3c12cea8&quot;&gt;Como é programar em JavaScript em 2016&lt;/a&gt; [
&lt;a href=&quot;https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.cx19ga9vu&quot;&gt;original&lt;/a&gt;
]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.destroyallsoftware.com/talks/wat&quot;&gt;Wat - Destroy All Software&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;referencias&quot;&gt;Referencias&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.wintellect.com/devcenter/dbanister/stop-fighting-node-js-in-the-enterprise&quot;&gt;Stop fighting Node.js in the enterprise&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://medium.com/@nodesource/the-enterprise-node-community-987ab4221ef5&quot;&gt;The (Enterprise) Node Community&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.quora.com/Is-Node-js-declining-already&quot;&gt;Is Node.js declining already&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.toptal.com/nodejs/why-the-hell-would-i-use-node-js&quot;&gt;Why The Hell Would I Use Node.js? A Case-by-Case Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.to/reverentgeek/do-you-hate-javascript&quot;&gt;Do you hate JavaScript?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://node.university/blog/502765/node-for-java-devs&quot;&gt;Node for Java Developers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://nodesource.com/blog/the-21-most-awesome-awesome-lists-for-node-js-developers&quot;&gt;21 awesome lists for devs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dúvidas? Comentários? Algum assunto para detalhar melhor? Deixe o feedback nos comentários&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="node" /><category term="javascript" /><summary type="html">Iniciar em node é bem simples. Tendo o pacode instalado (installer aqui), ele já vem com o NPM (gerenciador de pacodes do node).</summary></entry><entry><title type="html">O básico sobre heroku</title><link href="https://adamatti.github.io/blog/blog/git/2017/06/04/heroku.html" rel="alternate" type="text/html" title="O básico sobre heroku" /><published>2017-06-04T16:00:00+00:00</published><updated>2017-06-04T16:00:00+00:00</updated><id>https://adamatti.github.io/blog/blog/git/2017/06/04/heroku</id><content type="html" xml:base="https://adamatti.github.io/blog/blog/git/2017/06/04/heroku.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Heroku é um &lt;a href=&quot;https://pt.wikipedia.org/wiki/Plataforma_como_servi%C3%A7o&quot;&gt;PaaS&lt;/a&gt;, Plataforma como serviço. Isso significa que você pode fazer &lt;em&gt;deploy&lt;/em&gt; de seus serviços sem se preocupar (ao menos inicialmente) com &lt;em&gt;configs&lt;/em&gt; de &lt;em&gt;hardware&lt;/em&gt; e sistema operacional.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Você só precisa se focar na aplicação e nos componentes de infra estrutura necessários (ex: banco de dados, cache, log, filas, etc)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Não é necessário conhecimento em docker&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;criando-uma-conta&quot;&gt;Criando uma conta&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O processo é bem simples. Antigamente precisava de cartão de crédito, hj só precisa de nome/sobrenome/email/empresa e confirmar o email.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O &lt;a href=&quot;https://www.heroku.com/pricing&quot;&gt;plano free&lt;/a&gt; é limitado, mas ao mesmo tempo poderoso: ele permite criar quantas apps forem necessário, mas só uma pode rodar 24x7. O &lt;em&gt;default&lt;/em&gt; é a aplicação desligar depois de 30 min sem acesso.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;criando-uma-aplicação-fazendo-deploy&quot;&gt;Criando uma aplicação, fazendo deploy&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para criar uma &lt;a href=&quot;https://dashboard.heroku.com/new-app&quot;&gt;nova app&lt;/a&gt;, a única informação requerida é a região (US or EU). O nome da aplicação é opcional (se não informar o heroku gera um nome aleatório).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sobre &lt;a href=&quot;https://devcenter.heroku.com/categories/language-support&quot;&gt;linguagens&lt;/a&gt;, o Heroku suporta Ruby, Python, Node, Php, Go, Java (e outras linguagens da JVM como scala / clojure / groovy). Mas é possível usar buildpacks de terceiros para outras linguagens, como &lt;a href=&quot;https://github.com/HashNuke/heroku-buildpack-elixir&quot;&gt;elixir&lt;/a&gt;, &lt;a href=&quot;https://github.com/AdmitHub/meteor-buildpack-horse&quot;&gt;meteor&lt;/a&gt;, etc&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;fazendo-deploy&quot;&gt;Fazendo deploy&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;É possível fazer &lt;em&gt;deploy&lt;/em&gt; no heroku de várias formas, sendo as mais simples usar a ferramenta do heroku (heroku-cli), usar git ou dropbox.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Por exemplo, para fazer deploy de uma &lt;a href=&quot;https://github.com/heroku/node-hello&quot;&gt;aplicação de exemplo em node&lt;/a&gt; usando terminal:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-c1&quot;&gt;# autenticar no heroku&lt;/span&gt;
heroku login
&lt;span class=&quot;tok-c1&quot;&gt;#baixando código de exemplo e entrando na pasta&lt;/span&gt;
git clone https://github.com/heroku/sushi-inc.git
&lt;span class=&quot;tok-nb&quot;&gt;cd&lt;/span&gt; sushi-inc
&lt;span class=&quot;tok-c1&quot;&gt;# criando vinculo git com heroku&lt;/span&gt;
heroku git:remote -a nomeDaAppCriada
&lt;span class=&quot;tok-c1&quot;&gt;# fazendo deploy usando git push&lt;/span&gt;
git push heroku&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Agora você pode acessar a aplicação usando &lt;a href=&quot;http://nomeDaAppCriada.herokuapp.com&quot; class=&quot;bare&quot;&gt;http://nomeDaAppCriada.herokuapp.com&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;PS: caso tenha problema para executar a app, mude o package.json com:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;tok-p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;start&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;node index.js&amp;quot;&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Pontos importantes:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Heroku faz cache do framework de execução (ex: versão do node / java). Por exemplo, para mudar a versão do node a ser usado é só mudar a sessão &lt;em&gt;engines&lt;/em&gt; no package.json.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ele tbm faz cache das dependências. Se o descritor não for alterado ele não precisa baixar as dependências novamente (ex: node_modules, bower_components)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Heroku já fornece https. Você só precisa alterar sua app para forçar esse uso (se necessário)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;add-ons&quot;&gt;Add Ons&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ok, mas como estender minha aplicação no heroku? Bom, o Heroku tem parceria com &lt;a href=&quot;https://elements.heroku.com/addons&quot;&gt;~150 serviços&lt;/a&gt;. Eles podem ser adicionados na aba &lt;em&gt;resources&lt;/em&gt; dentro da app desejada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Precisa de até 500mb de mongo? De graça na &lt;a href=&quot;https://elements.heroku.com/addons/mongolab&quot;&gt;mLabs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cache? 30 mb de graça na &lt;a href=&quot;https://elements.heroku.com/addons/rediscloud&quot;&gt;redis cloud&lt;/a&gt;. E dá para plugar um &lt;a href=&quot;https://elements.heroku.com/addons/redismonitor&quot;&gt;monitor&lt;/a&gt; tbm.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Logs? &lt;a href=&quot;https://elements.heroku.com/addons/logentries&quot;&gt;Log Entries&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Monitoramento? &lt;a href=&quot;https://elements.heroku.com/addons/newrelic&quot;&gt;NewRelic&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Importante salientar que o Heroku é criador do padrão &lt;a href=&quot;https://12factor.net/pt_br&quot;&gt;The Twelve-Factor&lt;/a&gt;, logo, os addons estarão disponíveis através de &lt;a href=&quot;https://12factor.net/pt_br/config&quot;&gt;variáveis de ambiente&lt;/a&gt;. Por exemplo, para usar um banco da mLabs a app precisa pegar a URL da variável MONGOLAB_URI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Você vai precisar informar o cartão de crédito para adicionar addons (mesmo escolhendo os gratuítos)&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;próximos-passos&quot;&gt;Próximos passos&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Você pode fazer alguns &lt;em&gt;deploys&lt;/em&gt; no Heroku e desfazer pelo painel de admin. É muito prático fazer um &lt;em&gt;rollback&lt;/em&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/pipelines&quot;&gt;Pipelines&lt;/a&gt;: você pode ter a versão dev/test/prod de uma app conectadas, e só precisa fazer &lt;em&gt;deploy&lt;/em&gt; de código para o primeiro passo. As promoções de ambiente podem ser feita pelo painel admin do heroku;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Estudar o &lt;a href=&quot;https://devcenter.heroku.com/articles/heroku-cli&quot;&gt;Heroku cli&lt;/a&gt;, para ver logs, conectar na app por ssh, etc;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disponibilizar uma app com o &lt;a href=&quot;https://developer.salesforce.com/blogs/developer-relations/2014/08/heroku-button-anyone-can-deploy-your-app.html&quot;&gt;botão do Heroku&lt;/a&gt;. O &lt;a href=&quot;https://github.com/RocketChat/Rocket.Chat#heroku&quot;&gt;Rocket.Chat&lt;/a&gt; oferece essa feature. A &lt;a href=&quot;https://github.com/adamatti/Wiki/blob/master/README.md&quot;&gt;wiki&lt;/a&gt; q eu criei de exemplo tbm;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fazer deploy de suas &lt;em&gt;pet apps&lt;/em&gt; para lá. Eu tenho umas 20 apps lá, para busca de carros / imóveis (&lt;a href=&quot;https://pt.wikipedia.org/wiki/Screen_scraping&quot;&gt;Screen Scraper&lt;/a&gt;), bot, wiki, controle de tasks, leitor do twitter, &lt;em&gt;fake apis&lt;/em&gt; (para teste), etc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usar Heroku &lt;em&gt;on premise&lt;/em&gt; com o &lt;a href=&quot;https://github.com/dokku/dokku&quot;&gt;dokku&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;referencias&quot;&gt;Referencias&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/blog/git/2017/05/31/git.html&quot;&gt;O básico sobre git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br&quot;&gt;The Twelve-Factor App&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="heroku" /><category term="git" /><summary type="html">Heroku é um PaaS, Plataforma como serviço. Isso significa que você pode fazer deploy de seus serviços sem se preocupar (ao menos inicialmente) com configs de hardware e sistema operacional.</summary></entry><entry><title type="html">O básico sobre git</title><link href="https://adamatti.github.io/blog/blog/git/2017/05/31/git.html" rel="alternate" type="text/html" title="O básico sobre git" /><published>2017-05-31T16:00:00+00:00</published><updated>2017-05-31T16:00:00+00:00</updated><id>https://adamatti.github.io/blog/blog/git/2017/05/31/git</id><content type="html" xml:base="https://adamatti.github.io/blog/blog/git/2017/05/31/git.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dado que algumas pessoas pessoas ainda enfrentam problemas com git, decidi escrever um post de 5 min sobre o tema para dar uma luz para o pessoal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&quot;Não, o git não é só um shell especial para windows&quot;&lt;br&gt;
&quot;Sim, git e github são coisas diferentes&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;histórico-comparativos&quot;&gt;Histórico / Comparativos&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Segundo a &lt;a href=&quot;https://pt.wikipedia.org/wiki/Git&quot;&gt;Wikipedia&lt;/a&gt;, &quot;Git foi criado pelo &lt;a href=&quot;https://pt.wikipedia.org/wiki/Linus_Torvalds&quot;&gt;Linus Torvald&lt;/a&gt; para o desenvolvimento do &lt;a href=&quot;https://pt.wikipedia.org/wiki/Linux_(n%C3%BAcleo)&quot;&gt;kernel do linux&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A grande sacada do git é que ele é um modelo de repositório distribuido. Diferente do &lt;a href=&quot;https://www.visualstudio.com/tfs&quot;&gt;TFS&lt;/a&gt; que é um modelo centrado no servidor - onde se o servidor está fora ninguem consegue alterar código pq geralmente os plugins precisam sinalizar o lock do arquivo no servidor  - com git você consegue fazer acompanhamento de alterações sem um servidor mestre. Ex:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-c1&quot;&gt;# vai para a pasta temporária&lt;/span&gt;
&lt;span class=&quot;tok-nb&quot;&gt;cd&lt;/span&gt; /tmp
&lt;span class=&quot;tok-c1&quot;&gt;# cria uma pasta fake de projeto&lt;/span&gt;
mkdir app
&lt;span class=&quot;tok-nb&quot;&gt;cd&lt;/span&gt; app
&lt;span class=&quot;tok-c1&quot;&gt;# inicia um repositório&lt;/span&gt;
git init
&lt;span class=&quot;tok-c1&quot;&gt;# cria um arquivo qualquer&lt;/span&gt;
&lt;span class=&quot;tok-nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;meu arquivo de teste&amp;quot;&lt;/span&gt; &amp;gt; teste.txt
&lt;span class=&quot;tok-c1&quot;&gt;# Marca a alteração na área &amp;quot;stage&amp;quot; do git&lt;/span&gt;
git add teste.txt
&lt;span class=&quot;tok-c1&quot;&gt;# Adiciona ela ao repositório&lt;/span&gt;
git commit -m &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;Arquivo adicionado ao repositório&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E com isso você criou um repositório local, sem precisar de servidor. Dá para criar &lt;em&gt;branches&lt;/em&gt;, fazer &lt;em&gt;merges&lt;/em&gt;, etc e essas tarefas são executadas primeiramente local, só são publicadas para o repositório remoto quando requisitado (ex: usando &lt;code&gt;git push&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;comandos-básicos&quot;&gt;Comandos básicos&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Usar o git por linha de comando ou usando alguma ferramenta visual é preferencia de cada desenvolvedor, mas eu particularmente acho mais produtivo usar git por linha de comando. Dentre os comandos mais usados:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all spread&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 50%;&quot;&gt;
&lt;col style=&quot;width: 50%;&quot;&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;git init&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;inicia um repositório git. Só precisa ser executado 1x por repositório&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;git add nomeDoArquivoOuPasta&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;marcar o arquivo/pasta alterado a ser persistido&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;git commit -m mensagem&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;efetua a alteração no repositório&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;git branch&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;mostra os branches e o &lt;em&gt;branch&lt;/em&gt; atual&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;git status -s&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;mostra o status das alterações (ex: arquivos marcados / alterados / excluidos)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;git remote -v&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;mostra lista de repositórios remotos&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;git remote add apelido urlDoRepositorio&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Cria um link para um repositório remoto. Necessário para subir o código para Github, Bitbucket, Heroku&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;git push&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&quot;empurra&quot; as alterações locais para repositório remoto&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;git pull&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;baixa atualizações do repositório remoto&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;boas-práticas&quot;&gt;Boas práticas&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fazer &lt;em&gt;commits&lt;/em&gt; pequenos e frequentes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usar informações úteis nos &lt;em&gt;commits&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Estudar outros modelos (ex: &lt;em&gt;trunk base development&lt;/em&gt;, &lt;a href=&quot;http://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;git flow&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Não demorar para fazer &lt;em&gt;merge&lt;/em&gt; de &lt;em&gt;feature branches&lt;/em&gt; para o &lt;em&gt;future state&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usar git rebase&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ter um plano de &lt;em&gt;CI&lt;/em&gt; que faça build+testes de todos os branches. Isso ajuda no &lt;em&gt;code review&lt;/em&gt; e verificações para não impactar o &lt;em&gt;branch&lt;/em&gt; principal&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;aplicativos&quot;&gt;Aplicativos&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Algumas sugestões para ver a arvore de alterações de modo gráfica:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;gitk&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gitkraken.com&quot;&gt;GitKraken&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/help/idea/2017.1/managing-changelists.html&quot;&gt;Intellij Idea ChangeList&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;próximos-passos&quot;&gt;Próximos passos&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Fazer &lt;em&gt;track&lt;/em&gt; de projetos ou notas na máquina local? Publicar um projeto para o github ou bitbucket? Fazer deploy de uma aplicação para o heroku? Contribuir com um projeto &lt;em&gt;open source&lt;/em&gt;? As possibilidades são infinitas.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;referencias&quot;&gt;Referencias&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pt.wikipedia.org/wiki/Git&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.javacodegeeks.com/2013/05/git-explained-for-beginners.html&quot;&gt;Git explained for beginners&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://rogerdudler.github.io/git-guide&quot;&gt;Complete guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.alexkras.com/19-git-tips-for-everyday-use&quot;&gt;19 Tips for Everyday use&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://examples.javacodegeeks.com/software-development/git/git-commands-tutorial&quot;&gt;Git Commands Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="git" /><summary type="html">Dado que algumas pessoas pessoas ainda enfrentam problemas com git, decidi escrever um post de 5 min sobre o tema para dar uma luz para o pessoal.</summary></entry><entry><title type="html">Criando um chatbot</title><link href="https://adamatti.github.io/blog/blog/node/2017/05/20/hubot.html" rel="alternate" type="text/html" title="Criando um chatbot" /><published>2017-05-20T16:00:00+00:00</published><updated>2017-05-20T16:00:00+00:00</updated><id>https://adamatti.github.io/blog/blog/node/2017/05/20/hubot</id><content type="html" xml:base="https://adamatti.github.io/blog/blog/node/2017/05/20/hubot.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://pt.wikipedia.org/wiki/Wikip%C3%A9dia:Muito_longo;_n%C3%A3o_li&quot;&gt;TL/DR&lt;/a&gt;&lt;/strong&gt; : Hubot é legal e bem simples :-)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Bem simples o processo de criação de bots usando o hubot seguindo &lt;a href=&quot;https://hubot.github.com/docs/&quot;&gt;tutorial deles&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;requisitos&quot;&gt;Requisitos&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ter &lt;a href=&quot;https://nodejs.org&quot;&gt;node&lt;/a&gt; instalado&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; / &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt; (facilita os testes)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;passos&quot;&gt;Passos&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Instalar o &lt;a href=&quot;http://yeoman.io/&quot;&gt;yeoman&lt;/a&gt; (gerador de código) e generator-hubot: &lt;code&gt;npm install -g yo generator-hubot&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ir na pasta desejada, rodar &lt;code&gt;yo nomeDoBot&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Com isso o &lt;a href=&quot;http://yeoman.io/&quot;&gt;yeoman&lt;/a&gt; vai gerar os seguintes arquivos (&lt;a href=&quot;https://github.com/adamatti/LearnHubot/commit/b2178220ccc994685f0862d105aa2b78f3a07a1c&quot;&gt;ver resultado no github&lt;/a&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all spread&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 50%;&quot;&gt;
&lt;col style=&quot;width: 50%;&quot;&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;.editorconfig&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Descreve formato dos outros arquivos (ex: identação, charset). Vários editores suportam esse formato (ver a página do &lt;a href=&quot;http://editorconfig.org/&quot;&gt;editorConfig&lt;/a&gt;)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;.gitignore&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Descritor de arquivos a não ser incluídos no repositório&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Procfile&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Tem o comando que vai ser executado no &lt;a href=&quot;https://heroku.com/&quot;&gt;heroku&lt;/a&gt; (se decidir fazer deploy lá)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Readme.md&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Documentação básica. Pode ser removido&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;pasta bin&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;script para rodar o bot&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;external-scripts.json&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Outros scripts a serem carregados pelo hubot&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;hubot-scripts.json&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Antes os script do hubot deveriam ser colocados aqui, agora só precisam estar na pasta script&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;package.json&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Descritor de projeto node (dependências, etc)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;scripts/example.coffee&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Exemplo de script para o bot em &lt;a href=&quot;http://coffeescript.org/&quot;&gt;coffee script&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Agora é só iniciar o redis (instale ele na máquina local ou &lt;code&gt;docker run redis -p 6379&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E com o Redis rodando, executar o bot: &lt;code&gt;bin/hubot.cmd&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Com isso já dá para interagir com o bot. Exemplo: digite &lt;code&gt;nomeDoBot help&lt;/code&gt; para ver comandos disponíveis.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;criando-o-primeiro-script&quot;&gt;Criando o primeiro script&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Criei &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/LearnHubot/master/scripts/adamatti.js&quot;&gt;um exemplo de script bem simples&lt;/a&gt; e zueiro para mostrar a sintaxe:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all spread&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 33.3333%;&quot;&gt;
&lt;col style=&quot;width: 33.3333%;&quot;&gt;
&lt;col style=&quot;width: 33.3334%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Gatilho&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Sintaxe&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;@nomeDoBot is it weekend?&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.respond(/is it (weekend)\s?\?/i, msg &amp;#8658; {&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Retorna se é fim de semana&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;lima (em qq parte da frase)&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.hear(/lima/i, res &amp;#8658; {&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Retorna para o user q mandou o texto uma frase fixa&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;uma música&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.hear(/uma música/i, res &amp;#8658;{&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Retorna para a sala uma música aleatória&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;ao entrar na sala&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.enter(res &amp;#8658; {&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Retorna uma frase fixa&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;ao sair da sala&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.leave(res &amp;#8658; {&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Retorna uma frase fixa&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;qq texto&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.listen(message &amp;#8658; {&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Randomicamente 20% das vezes vai retornar uma frase fixa.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;para-um-teste-completo&quot;&gt;Para um teste completo&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para fazer o bot iteragir com um chat, criei um arquivo &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/LearnHubot/master/docker-compose.yml&quot;&gt;docker-compose&lt;/a&gt; com os containers:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all spread&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 33.3333%;&quot;&gt;
&lt;col style=&quot;width: 33.3333%;&quot;&gt;
&lt;col style=&quot;width: 33.3334%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Nome do container&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;imagem&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;cache&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;redis&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;cache (usado pelo bot)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;db&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;mongo&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;banco (usado pelo rocketchat)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;chat&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;rocket.chat&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;instancia do chat&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;bot&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;node (ver &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/LearnHubot/master/Dockerfile&quot;&gt;Dockerfile&lt;/a&gt;)&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Usa a imagem base do node, copia o código e baixa as dependencias&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Também no &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/LearnHubot/master/docker-compose.yml&quot;&gt;docker-compose&lt;/a&gt; estão as integrações entre containers, usando variáveis de ambiente.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;para-rodar-tudo&quot;&gt;Para rodar tudo&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O resultado final está disponível &lt;a href=&quot;https://github.com/adamatti/LearnHubot&quot;&gt;no github&lt;/a&gt;. Só precisa:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Iniciar os containers: &lt;code&gt;docker-compose up --build -d&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;acessar o rocket.chat: &lt;code&gt;&lt;a href=&quot;http://localhost:80&quot; class=&quot;bare&quot;&gt;http://localhost:80&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;registre o primeiro usuário. Ele será o admin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;crie um usuário para o bot, com username/name/pass = bot&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;e agora é só interagir com o bot&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;próximos-passos&quot;&gt;Próximos passos?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Agora é escrever script úteis para ajudar em troubleshoot e tarefas do dia dia.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E estudar &lt;a href=&quot;https://nodered.org&quot;&gt;node-red&lt;/a&gt; para integrar com outras plataformas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dúvidas? Sugestões? Deixe nos comentários.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="node" /><category term="chatbot" /><summary type="html">TL/DR : Hubot é legal e bem simples :-) Bem simples o processo de criação de bots usando o hubot seguindo tutorial deles. Requisitos Ter node instalado Docker / Docker Compose (facilita os testes) Passos Instalar o yeoman (gerador de código) e generator-hubot: npm install -g yo generator-hubot ir na pasta desejada, rodar yo nomeDoBot Com isso o yeoman vai gerar os seguintes arquivos (ver resultado no github): .editorconfig Descreve formato dos outros arquivos (ex: identação, charset). Vários editores suportam esse formato (ver a página do editorConfig) .gitignore Descritor de arquivos a não ser incluídos no repositório Procfile Tem o comando que vai ser executado no heroku (se decidir fazer deploy lá) Readme.md Documentação básica. Pode ser removido pasta bin script para rodar o bot external-scripts.json Outros scripts a serem carregados pelo hubot hubot-scripts.json Antes os script do hubot deveriam ser colocados aqui, agora só precisam estar na pasta script package.json Descritor de projeto node (dependências, etc) scripts/example.coffee Exemplo de script para o bot em coffee script Agora é só iniciar o redis (instale ele na máquina local ou docker run redis -p 6379). E com o Redis rodando, executar o bot: bin/hubot.cmd. Com isso já dá para interagir com o bot. Exemplo: digite nomeDoBot help para ver comandos disponíveis. Criando o primeiro script Criei um exemplo de script bem simples e zueiro para mostrar a sintaxe: Gatilho Sintaxe Descrição @nomeDoBot is it weekend? robot.respond(/is it (weekend)\s?\?/i, msg &amp;#8658; { Retorna se é fim de semana lima (em qq parte da frase) robot.hear(/lima/i, res &amp;#8658; { Retorna para o user q mandou o texto uma frase fixa uma música robot.hear(/uma música/i, res &amp;#8658;{ Retorna para a sala uma música aleatória ao entrar na sala robot.enter(res &amp;#8658; { Retorna uma frase fixa ao sair da sala robot.leave(res &amp;#8658; { Retorna uma frase fixa qq texto robot.listen(message &amp;#8658; { Randomicamente 20% das vezes vai retornar uma frase fixa. Para um teste completo Para fazer o bot iteragir com um chat, criei um arquivo docker-compose com os containers: Nome do container imagem descrição cache redis cache (usado pelo bot) db mongo banco (usado pelo rocketchat) chat rocket.chat instancia do chat bot node (ver Dockerfile) Usa a imagem base do node, copia o código e baixa as dependencias Também no docker-compose estão as integrações entre containers, usando variáveis de ambiente. Para rodar tudo O resultado final está disponível no github. Só precisa: Iniciar os containers: docker-compose up --build -d acessar o rocket.chat: http://localhost:80 registre o primeiro usuário. Ele será o admin crie um usuário para o bot, com username/name/pass = bot e agora é só interagir com o bot Próximos passos? Agora é escrever script úteis para ajudar em troubleshoot e tarefas do dia dia. E estudar node-red para integrar com outras plataformas. Dúvidas? Sugestões? Deixe nos comentários.</summary></entry><entry><title type="html">Novo Blog</title><link href="https://adamatti.github.io/blog/blog/ruby/2017/05/19/newBlog.html" rel="alternate" type="text/html" title="Novo Blog" /><published>2017-05-19T03:00:00+00:00</published><updated>2017-05-19T03:00:00+00:00</updated><id>https://adamatti.github.io/blog/blog/ruby/2017/05/19/newBlog</id><content type="html" xml:base="https://adamatti.github.io/blog/blog/ruby/2017/05/19/newBlog.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Buenas&amp;#8230;&amp;#8203; começo aqui minha terceira tentativa de blog :-)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;histórico&quot;&gt;Histórico&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Criei &lt;a href=&quot;http://adamatti.blogspot.com.br&quot;&gt;o primeiro&lt;/a&gt; em 2006&amp;#8230;&amp;#8203; mas tem pouca coisa técnica&amp;#8230;&amp;#8203; foi usado mais como rede social do que blog&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://adamatti.tumblr.com&quot;&gt;O segundo&lt;/a&gt; foi criado em 2013. Agora mais técnico, mas ainda é mais um wiki pessoal para guardar minhas notas do que um blog. E ninguém usa o tumblr como blog :-P&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;motivação&quot;&gt;Motivação&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Curto acompanhar o conteúdo compartilhado por outros, acho que eu posso colaborar um pouco com a comunidade com coisas que eu já sei.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Professores meus de faculdade como o &lt;a href=&quot;https://blog.danielwildt.com&quot;&gt;Daniel Wildt&lt;/a&gt; e o &lt;a href=&quot;https://medium.com/@diogo.lucas&quot;&gt;Diogo Lucas&lt;/a&gt; seguem compartilhando até hoje.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E é massa para o ego quando um post recebe 30 mil acessos (como o do &lt;a href=&quot;http://marcelo-cure.blogspot.com.br/2016/09/rest-anti-patterns.html&quot;&gt;Marcelo Cure&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Outro ponto é quando você presencia a discussão de algum ponto que você já postou, é só apontar as pessoas para o link.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E por último mas não menos importante, ensinar tbm é uma forma de aprender, de organizar as ideias.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;ah-mas-pq-em-português&quot;&gt;&quot;Ah, mas pq em português?&quot;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Minha meta é só compartilhar e registrar conhecimento. Não estou buscando visibilidade internacional por agora. Já tem muito conteúdo em inglês, mas pouco em português. Acho que eu posso ajudar um pouco nisso.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;futuro-frequência&quot;&gt;Futuro / frequência&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A atividade de postar conteúdo tem que ser prazerosa, então vou fazer enquanto der vontade. Que seja eterno enquanto dure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Pretendo no mínimo 1 por mês, ideal 1 por semana. Nirvana é talvez um dia escrever um livro como o &lt;a href=&quot;https://github.com/waldemarnt/building-testable-apis-with-nodejs&quot;&gt;Waldermar sobre node&lt;/a&gt; ou como o &lt;a href=&quot;https://github.com/gomex/docker-para-desenvolvedores&quot;&gt;Gomex sobre docker&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Talvez um dia youtube ou podcast, vai saber&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;pq-github-io-e-não-wordpress-blogspot-etc&quot;&gt;&quot;Pq github.io e não wordpress / blogspot / etc?&quot;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Requisito era escrever os posts em &lt;a href=&quot;http://asciidoctor.org&quot;&gt;asciidoc&lt;/a&gt; (#chupaMarkdown), o mais dev friendly possível. E que não tivesse limitações, me deixasse manipular o html / js / css totalmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Como já tinha colocado &lt;a href=&quot;https://github.com/adamatti/adamatti.github.io&quot;&gt;o resume&lt;/a&gt; no github e curtí o resultado, a escolha natural foi o &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O github não aceita qualquer plugin para rodar lá, então com a ajuda do pessoal do &lt;a href=&quot;https://github.com/asciidoctor/jekyll-asciidoc&quot;&gt;jekyll-asciidoc&lt;/a&gt; consegui fazer funcionar &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt; + &lt;a href=&quot;https://github.com/asciidoctor/jekyll-asciidoc&quot;&gt;jekyll-asciidoc&lt;/a&gt; (&lt;a href=&quot;https://github.com/asciidoctor/jekyll-asciidoc/issues/154&quot;&gt;discussão&lt;/a&gt; e &lt;a href=&quot;http://eshepelyuk.github.io/2014/10/28/automate-github-pages-travisci.html&quot;&gt;passo a passo&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Funciona assim: o código jekyll fica no &lt;a href=&quot;https://github.com/adamatti/blog/tree/jekyll&quot;&gt;branch jekyll&lt;/a&gt;, e o &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/blog/jekyll/.travis.yml&quot;&gt;travis&lt;/a&gt; roda &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/blog/jekyll/build.sh&quot;&gt;um script de deploy&lt;/a&gt; que gera a página estática no &lt;a href=&quot;https://github.com/adamatti/blog/tree/gh-pages&quot;&gt;branch gh-pages&lt;/a&gt;. Curtí o resultado.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;sugestões&quot;&gt;Sugestões&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Algum assunto que eu saiba que você gostaria de ver aqui? Algo que eu comentei em algum evento / mesa de bar?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Você tem algum blog técnico que gostaria de compartilhar? Manda aí nos comentários.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="ruby" /><category term="jekyll" /><summary type="html">Buenas&amp;#8230;&amp;#8203; começo aqui minha terceira tentativa de blog :-) Histórico Criei o primeiro em 2006&amp;#8230;&amp;#8203; mas tem pouca coisa técnica&amp;#8230;&amp;#8203; foi usado mais como rede social do que blog O segundo foi criado em 2013. Agora mais técnico, mas ainda é mais um wiki pessoal para guardar minhas notas do que um blog. E ninguém usa o tumblr como blog :-P Motivação Curto acompanhar o conteúdo compartilhado por outros, acho que eu posso colaborar um pouco com a comunidade com coisas que eu já sei. Professores meus de faculdade como o Daniel Wildt e o Diogo Lucas seguem compartilhando até hoje. E é massa para o ego quando um post recebe 30 mil acessos (como o do Marcelo Cure). Outro ponto é quando você presencia a discussão de algum ponto que você já postou, é só apontar as pessoas para o link. E por último mas não menos importante, ensinar tbm é uma forma de aprender, de organizar as ideias. &quot;Ah, mas pq em português?&quot; Minha meta é só compartilhar e registrar conhecimento. Não estou buscando visibilidade internacional por agora. Já tem muito conteúdo em inglês, mas pouco em português. Acho que eu posso ajudar um pouco nisso. Futuro / frequência A atividade de postar conteúdo tem que ser prazerosa, então vou fazer enquanto der vontade. Que seja eterno enquanto dure. Pretendo no mínimo 1 por mês, ideal 1 por semana. Nirvana é talvez um dia escrever um livro como o Waldermar sobre node ou como o Gomex sobre docker. Talvez um dia youtube ou podcast, vai saber&amp;#8230;&amp;#8203; &quot;Pq github.io e não wordpress / blogspot / etc?&quot; Requisito era escrever os posts em asciidoc (#chupaMarkdown), o mais dev friendly possível. E que não tivesse limitações, me deixasse manipular o html / js / css totalmente. Como já tinha colocado o resume no github e curtí o resultado, a escolha natural foi o jekyll Jekyll O github não aceita qualquer plugin para rodar lá, então com a ajuda do pessoal do jekyll-asciidoc consegui fazer funcionar jekyll + jekyll-asciidoc (discussão e passo a passo). Funciona assim: o código jekyll fica no branch jekyll, e o travis roda um script de deploy que gera a página estática no branch gh-pages. Curtí o resultado. Sugestões Algum assunto que eu saiba que você gostaria de ver aqui? Algo que eu comentei em algum evento / mesa de bar? Você tem algum blog técnico que gostaria de compartilhar? Manda aí nos comentários.</summary></entry></feed>