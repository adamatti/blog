<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="https://adamatti.github.io/blog/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://adamatti.github.io/blog/blog/" rel="alternate" type="text/html" /><updated>2017-05-20T23:21:43+00:00</updated><id>https://adamatti.github.io/blog/blog/</id><title type="html">Adamatti - blog pessoal</title><subtitle>Espaço para compartilhar conhecimento, minhas opiniões, notícias que eu considero relevante.
</subtitle><entry><title type="html">Criando um chatbot</title><link href="https://adamatti.github.io/blog/blog/node/2017/05/20/hubot.html" rel="alternate" type="text/html" title="Criando um chatbot" /><published>2017-05-20T16:00:00+00:00</published><updated>2017-05-20T16:00:00+00:00</updated><id>https://adamatti.github.io/blog/blog/node/2017/05/20/hubot</id><content type="html" xml:base="https://adamatti.github.io/blog/blog/node/2017/05/20/hubot.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://pt.wikipedia.org/wiki/Wikip%C3%A9dia:Muito_longo;_n%C3%A3o_li&quot;&gt;TL/DR&lt;/a&gt;&lt;/strong&gt; : Hubot é legal e bem simples :-)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Bem simples o processo de criação de bots usando o hubot seguindo &lt;a href=&quot;https://hubot.github.com/docs/&quot;&gt;tutorial deles&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;requisitos&quot;&gt;Requisitos&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ter &lt;a href=&quot;https://nodejs.org&quot;&gt;node&lt;/a&gt; instalado&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; / &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt; (facilita os testes)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;passos&quot;&gt;Passos&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Instalar o &lt;a href=&quot;http://yeoman.io/&quot;&gt;yeoman&lt;/a&gt; (gerador de código) e generator-hubot: &lt;code&gt;npm install -g yo generator-hubot&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ir na pasta desejada, rodar &lt;code&gt;yo nomeDoBot&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Com isso o &lt;a href=&quot;http://yeoman.io/&quot;&gt;yeoman&lt;/a&gt; vai gerar os seguintes arquivos (&lt;a href=&quot;https://github.com/adamatti/LearnHubot/commit/b2178220ccc994685f0862d105aa2b78f3a07a1c&quot;&gt;ver resultado no github&lt;/a&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all spread&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 50%;&quot;&gt;
&lt;col style=&quot;width: 50%;&quot;&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;.editorconfig&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Descreve formato dos outros arquivos (ex: identação, charset). Vários editores suportam esse formato (ver a página do &lt;a href=&quot;http://editorconfig.org/&quot;&gt;editorConfig&lt;/a&gt;)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;.gitignore&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Descritor de arquivos a não ser incluídos no repositório&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Procfile&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Tem o comando que vai ser executado no &lt;a href=&quot;https://heroku.com/&quot;&gt;heroku&lt;/a&gt; (se decidir fazer deploy lá)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Readme.md&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Documentação básica. Pode ser removido&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;pasta bin&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;script para rodar o bot&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;external-scripts.json&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Outros scripts a serem carregados pelo hubot&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;hubot-scripts.json&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Antes os script do hubot deveriam ser colocados aqui, agora só precisam estar na pasta script&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;package.json&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Descritor de projeto node (dependências, etc)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;scripts/example.coffee&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Exemplo de script para o bot em &lt;a href=&quot;http://coffeescript.org/&quot;&gt;coffee script&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Agora é só iniciar o redis (instale ele na máquina local ou &lt;code&gt;docker run redis -p 6379&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E com o Redis rodando, executar o bot: &lt;code&gt;bin/hubot.cmd&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Com isso já dá para interagir com o bot. Exemplo: digite &lt;code&gt;nomeDoBot help&lt;/code&gt; para ver comandos disponíveis.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;criando-o-primeiro-script&quot;&gt;Criando o primeiro script&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Criei &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/LearnHubot/master/scripts/adamatti.js&quot;&gt;um exemplo de script bem simples&lt;/a&gt; e zueiro para mostrar a sintaxe:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all spread&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 33.3333%;&quot;&gt;
&lt;col style=&quot;width: 33.3333%;&quot;&gt;
&lt;col style=&quot;width: 33.3334%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Gatilho&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Sintaxe&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;@nomeDoBot is it weekend?&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.respond(/is it (weekend)\s?\?/i, msg &amp;#8658; {&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Retorna se é fim de semana&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;lima (em qq parte da frase)&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.hear(/lima/i, res &amp;#8658; {&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Retorna para o user q mandou o texto uma frase fixa&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;uma música&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.hear(/uma música/i, res &amp;#8658;{&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Retorna para a sala uma música aleatória&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;ao entrar na sala&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.enter(res &amp;#8658; {&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Retorna uma frase fixa&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;ao sair da sala&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.leave(res &amp;#8658; {&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Retorna uma frase fixa&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;qq texto&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;robot.listen(message &amp;#8658; {&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Randomicamente 20% das vezes vai retornar uma frase fixa.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;para-um-teste-completo&quot;&gt;Para um teste completo&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para fazer o bot iteragir com um chat, criei um arquivo &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/LearnHubot/master/docker-compose.yml&quot;&gt;docker-compose&lt;/a&gt; com os containers:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all spread&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 33.3333%;&quot;&gt;
&lt;col style=&quot;width: 33.3333%;&quot;&gt;
&lt;col style=&quot;width: 33.3334%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Nome do container&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;imagem&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;cache&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;redis&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;cache (usado pelo bot)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;db&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;mongo&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;banco (usado pelo rocketchat)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;chat&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;rocket.chat&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;instancia do chat&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;bot&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;node (ver &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/LearnHubot/master/Dockerfile&quot;&gt;Dockerfile&lt;/a&gt;)&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Usa a imagem base do node, copia o código e baixa as dependencias&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Também no &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/LearnHubot/master/docker-compose.yml&quot;&gt;docker-compose&lt;/a&gt; estão as integrações entre containers, usando variáveis de ambiente.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;para-rodar-tudo&quot;&gt;Para rodar tudo&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O resultado final está disponível &lt;a href=&quot;https://github.com/adamatti/LearnHubot&quot;&gt;no github&lt;/a&gt;. Só precisa:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Iniciar os containers: &lt;code&gt;docker-compose up --build -d&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;acessar o rocket.chat: &lt;code&gt;&lt;a href=&quot;http://localhost:80&quot; class=&quot;bare&quot;&gt;http://localhost:80&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;registre o primeiro usuário. Ele será o admin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;crie um usuário para o bot, com username/name/pass = bot&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;e agora é só interagir com o bot&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;próximos-passos&quot;&gt;Próximos passos?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Agora é escrever script úteis para ajudar em troubleshoot e tarefas do dia dia.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E estudar &lt;a href=&quot;https://nodered.org&quot;&gt;node-red&lt;/a&gt; para integrar com outras plataformas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dúvidas? Sugestões? Deixe nos comentários.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="node" /><category term="chatbot" /><summary type="html">TL/DR : Hubot é legal e bem simples :-) Bem simples o processo de criação de bots usando o hubot seguindo tutorial deles. Requisitos Ter node instalado Docker / Docker Compose (facilita os testes) Passos Instalar o yeoman (gerador de código) e generator-hubot: npm install -g yo generator-hubot ir na pasta desejada, rodar yo nomeDoBot Com isso o yeoman vai gerar os seguintes arquivos (ver resultado no github): .editorconfig Descreve formato dos outros arquivos (ex: identação, charset). Vários editores suportam esse formato (ver a página do editorConfig) .gitignore Descritor de arquivos a não ser incluídos no repositório Procfile Tem o comando que vai ser executado no heroku (se decidir fazer deploy lá) Readme.md Documentação básica. Pode ser removido pasta bin script para rodar o bot external-scripts.json Outros scripts a serem carregados pelo hubot hubot-scripts.json Antes os script do hubot deveriam ser colocados aqui, agora só precisam estar na pasta script package.json Descritor de projeto node (dependências, etc) scripts/example.coffee Exemplo de script para o bot em coffee script Agora é só iniciar o redis (instale ele na máquina local ou docker run redis -p 6379). E com o Redis rodando, executar o bot: bin/hubot.cmd. Com isso já dá para interagir com o bot. Exemplo: digite nomeDoBot help para ver comandos disponíveis. Criando o primeiro script Criei um exemplo de script bem simples e zueiro para mostrar a sintaxe: Gatilho Sintaxe Descrição @nomeDoBot is it weekend? robot.respond(/is it (weekend)\s?\?/i, msg &amp;#8658; { Retorna se é fim de semana lima (em qq parte da frase) robot.hear(/lima/i, res &amp;#8658; { Retorna para o user q mandou o texto uma frase fixa uma música robot.hear(/uma música/i, res &amp;#8658;{ Retorna para a sala uma música aleatória ao entrar na sala robot.enter(res &amp;#8658; { Retorna uma frase fixa ao sair da sala robot.leave(res &amp;#8658; { Retorna uma frase fixa qq texto robot.listen(message &amp;#8658; { Randomicamente 20% das vezes vai retornar uma frase fixa. Para um teste completo Para fazer o bot iteragir com um chat, criei um arquivo docker-compose com os containers: Nome do container imagem descrição cache redis cache (usado pelo bot) db mongo banco (usado pelo rocketchat) chat rocket.chat instancia do chat bot node (ver Dockerfile) Usa a imagem base do node, copia o código e baixa as dependencias Também no docker-compose estão as integrações entre containers, usando variáveis de ambiente. Para rodar tudo O resultado final está disponível no github. Só precisa: Iniciar os containers: docker-compose up --build -d acessar o rocket.chat: http://localhost:80 registre o primeiro usuário. Ele será o admin crie um usuário para o bot, com username/name/pass = bot e agora é só interagir com o bot Próximos passos? Agora é escrever script úteis para ajudar em troubleshoot e tarefas do dia dia. E estudar node-red para integrar com outras plataformas. Dúvidas? Sugestões? Deixe nos comentários.</summary></entry><entry><title type="html">Novo Blog</title><link href="https://adamatti.github.io/blog/blog/ruby/2017/05/19/newBlog.html" rel="alternate" type="text/html" title="Novo Blog" /><published>2017-05-19T03:00:00+00:00</published><updated>2017-05-19T03:00:00+00:00</updated><id>https://adamatti.github.io/blog/blog/ruby/2017/05/19/newBlog</id><content type="html" xml:base="https://adamatti.github.io/blog/blog/ruby/2017/05/19/newBlog.html">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Buenas&amp;#8230;&amp;#8203; começo aqui minha terceira tentativa de blog :-)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;histórico&quot;&gt;Histórico&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Criei &lt;a href=&quot;http://adamatti.blogspot.com.br&quot;&gt;o primeiro&lt;/a&gt; em 2006&amp;#8230;&amp;#8203; mas tem pouca coisa técnica&amp;#8230;&amp;#8203; foi usado mais como rede social do que blog&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://adamatti.tumblr.com&quot;&gt;O segundo&lt;/a&gt; foi criado em 2013. Agora mais técnico, mas ainda é mais um wiki pessoal para guardar minhas notas do que um blog. E ninguém usa o tumblr como blog :-P&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;motivação&quot;&gt;Motivação&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Curto acompanhar o conteúdo compartilhado por outros, acho que eu posso colaborar um pouco com a comunidade com coisas que eu já sei.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Professores meus de faculdade como o &lt;a href=&quot;https://blog.danielwildt.com&quot;&gt;Daniel Wildt&lt;/a&gt; e o &lt;a href=&quot;https://medium.com/@diogo.lucas&quot;&gt;Diogo Lucas&lt;/a&gt; seguem compartilhando até hoje.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E é massa para o ego quando um post recebe 30 mil acessos (como o do &lt;a href=&quot;http://marcelo-cure.blogspot.com.br/2016/09/rest-anti-patterns.html&quot;&gt;Marcelo Cure&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Outro ponto é quando você presencia a discussão de algum ponto que você já postou, é só apontar as pessoas para o link.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E por último mas não menos importante, ensinar tbm é uma forma de aprender, de organizar as ideias.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;ah-mas-pq-em-português&quot;&gt;&quot;Ah, mas pq em português?&quot;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Minha meta é só compartilhar e registrar conhecimento. Não estou buscando visibilidade internacional por agora. Já tem muito conteúdo em inglês, mas pouco em português. Acho que eu posso ajudar um pouco nisso.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;futuro-frequência&quot;&gt;Futuro / frequência&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A atividade de postar conteúdo tem que ser prazerosa, então vou fazer enquanto der vontade. Que seja eterno enquanto dure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Pretendo no mínimo 1 por mês, ideal 1 por semana. Nirvana é talvez um dia escrever um livro como o &lt;a href=&quot;https://github.com/waldemarnt/building-testable-apis-with-nodejs&quot;&gt;Waldermar sobre node&lt;/a&gt; ou como o &lt;a href=&quot;https://github.com/gomex/docker-para-desenvolvedores&quot;&gt;Gomex sobre docker&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Talvez um dia youtube ou podcast, vai saber&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;pq-github-io-e-não-wordpress-blogspot-etc&quot;&gt;&quot;Pq github.io e não wordpress / blogspot / etc?&quot;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Requisito era escrever os posts em &lt;a href=&quot;http://asciidoctor.org&quot;&gt;asciidoc&lt;/a&gt; (#chupaMarkdown), o mais dev friendly possível. E que não tivesse limitações, me deixasse manipular o html / js / css totalmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Como já tinha colocado &lt;a href=&quot;https://github.com/adamatti/adamatti.github.io&quot;&gt;o resume&lt;/a&gt; no github e curtí o resultado, a escolha natural foi o &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O github não aceita qualquer plugin para rodar lá, então com a ajuda do pessoal do &lt;a href=&quot;https://github.com/asciidoctor/jekyll-asciidoc&quot;&gt;jekyll-asciidoc&lt;/a&gt; consegui fazer funcionar &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt; + &lt;a href=&quot;https://github.com/asciidoctor/jekyll-asciidoc&quot;&gt;jekyll-asciidoc&lt;/a&gt; (&lt;a href=&quot;https://github.com/asciidoctor/jekyll-asciidoc/issues/154&quot;&gt;discussão&lt;/a&gt; e &lt;a href=&quot;http://eshepelyuk.github.io/2014/10/28/automate-github-pages-travisci.html&quot;&gt;passo a passo&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Funciona assim: o código jekyll fica no &lt;a href=&quot;https://github.com/adamatti/blog/tree/jekyll&quot;&gt;branch jekyll&lt;/a&gt;, e o &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/blog/jekyll/.travis.yml&quot;&gt;travis&lt;/a&gt; roda &lt;a href=&quot;https://raw.githubusercontent.com/adamatti/blog/jekyll/build.sh&quot;&gt;um script de deploy&lt;/a&gt; que gera a página estática no &lt;a href=&quot;https://github.com/adamatti/blog/tree/gh-pages&quot;&gt;branch gh-pages&lt;/a&gt;. Curtí o resultado.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;sugestões&quot;&gt;Sugestões&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Algum assunto que eu saiba que você gostaria de ver aqui? Algo que eu comentei em algum evento / mesa de bar?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Você tem algum blog técnico que gostaria de compartilhar? Manda aí nos comentários.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="ruby" /><category term="jekyll" /><summary type="html">Buenas&amp;#8230;&amp;#8203; começo aqui minha terceira tentativa de blog :-) Histórico Criei o primeiro em 2006&amp;#8230;&amp;#8203; mas tem pouca coisa técnica&amp;#8230;&amp;#8203; foi usado mais como rede social do que blog O segundo foi criado em 2013. Agora mais técnico, mas ainda é mais um wiki pessoal para guardar minhas notas do que um blog. E ninguém usa o tumblr como blog :-P Motivação Curto acompanhar o conteúdo compartilhado por outros, acho que eu posso colaborar um pouco com a comunidade com coisas que eu já sei. Professores meus de faculdade como o Daniel Wildt e o Diogo Lucas seguem compartilhando até hoje. E é massa para o ego quando um post recebe 30 mil acessos (como o do Marcelo Cure). Outro ponto é quando você presencia a discussão de algum ponto que você já postou, é só apontar as pessoas para o link. E por último mas não menos importante, ensinar tbm é uma forma de aprender, de organizar as ideias. &quot;Ah, mas pq em português?&quot; Minha meta é só compartilhar e registrar conhecimento. Não estou buscando visibilidade internacional por agora. Já tem muito conteúdo em inglês, mas pouco em português. Acho que eu posso ajudar um pouco nisso. Futuro / frequência A atividade de postar conteúdo tem que ser prazerosa, então vou fazer enquanto der vontade. Que seja eterno enquanto dure. Pretendo no mínimo 1 por mês, ideal 1 por semana. Nirvana é talvez um dia escrever um livro como o Waldermar sobre node ou como o Gomex sobre docker. Talvez um dia youtube ou podcast, vai saber&amp;#8230;&amp;#8203; &quot;Pq github.io e não wordpress / blogspot / etc?&quot; Requisito era escrever os posts em asciidoc (#chupaMarkdown), o mais dev friendly possível. E que não tivesse limitações, me deixasse manipular o html / js / css totalmente. Como já tinha colocado o resume no github e curtí o resultado, a escolha natural foi o jekyll Jekyll O github não aceita qualquer plugin para rodar lá, então com a ajuda do pessoal do jekyll-asciidoc consegui fazer funcionar jekyll + jekyll-asciidoc (discussão e passo a passo). Funciona assim: o código jekyll fica no branch jekyll, e o travis roda um script de deploy que gera a página estática no branch gh-pages. Curtí o resultado. Sugestões Algum assunto que eu saiba que você gostaria de ver aqui? Algo que eu comentei em algum evento / mesa de bar? Você tem algum blog técnico que gostaria de compartilhar? Manda aí nos comentários.</summary></entry></feed>